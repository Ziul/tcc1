<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: Configuration Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classConfiguration-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Configuration Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structConfiguration_1_1Item.xhtml">Item</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classConfiguration_1_1MatchAgainstConfig.xhtml">MatchAgainstConfig</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">match a string against a configurable list of patterns  <a href="classConfiguration_1_1MatchAgainstConfig.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5a232433925061eee25bfd7da061676a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5a232433925061eee25bfd7da061676a"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (const char *Name, const char *Default=0) const </td></tr>
<tr class="separator:a5a232433925061eee25bfd7da061676a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab36795f5f418ee9ce536ac7088e4d1e7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab36795f5f418ee9ce536ac7088e4d1e7"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (std::string const &amp;Name, const char *Default=0) const </td></tr>
<tr class="separator:ab36795f5f418ee9ce536ac7088e4d1e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47b7799639f8df36713531f842a40103"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a47b7799639f8df36713531f842a40103"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (std::string const &amp;Name, std::string const &amp;Default) const </td></tr>
<tr class="separator:a47b7799639f8df36713531f842a40103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07142b1420bf7e2ce0a2229f95bb84eb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a07142b1420bf7e2ce0a2229f95bb84eb"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>FindFile</b> (const char *Name, const char *Default=0) const </td></tr>
<tr class="separator:a07142b1420bf7e2ce0a2229f95bb84eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3d5638ac63eef657a1e85689d52f6a1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab3d5638ac63eef657a1e85689d52f6a1"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>FindDir</b> (const char *Name, const char *Default=0) const </td></tr>
<tr class="separator:ab3d5638ac63eef657a1e85689d52f6a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1eca8079af54e85187fe70ee00cf64f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classConfiguration.xhtml#ad1eca8079af54e85187fe70ee00cf64f">FindVector</a> (const char *Name, std::string const &amp;Default) const </td></tr>
<tr class="separator:ad1eca8079af54e85187fe70ee00cf64f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6b1f73adfdea30382679282b25e3be6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad6b1f73adfdea30382679282b25e3be6"></a>
std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>FindVector</b> (std::string const &amp;Name, std::string const &amp;Default) const </td></tr>
<tr class="separator:ad6b1f73adfdea30382679282b25e3be6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef4cabaa1bd6674f14b5a1b4c7fbd279"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aef4cabaa1bd6674f14b5a1b4c7fbd279"></a>
std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>FindVector</b> (const char *Name) const </td></tr>
<tr class="separator:aef4cabaa1bd6674f14b5a1b4c7fbd279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa065d8ed54209a194fa6bcb4b511e2b9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa065d8ed54209a194fa6bcb4b511e2b9"></a>
std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>FindVector</b> (std::string const &amp;Name) const </td></tr>
<tr class="separator:aa065d8ed54209a194fa6bcb4b511e2b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1759eee00312ae05456741bd4dc22a52"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1759eee00312ae05456741bd4dc22a52"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>FindI</b> (const char *Name, int const &amp;Default=0) const </td></tr>
<tr class="separator:a1759eee00312ae05456741bd4dc22a52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92db0b3f37d548d964dac09ce51aaa15"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a92db0b3f37d548d964dac09ce51aaa15"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>FindI</b> (std::string const &amp;Name, int const &amp;Default=0) const </td></tr>
<tr class="separator:a92db0b3f37d548d964dac09ce51aaa15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2e09bee1ba20cff2cab8c5aaf80996a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac2e09bee1ba20cff2cab8c5aaf80996a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindB</b> (const char *Name, bool const &amp;Default=false) const </td></tr>
<tr class="separator:ac2e09bee1ba20cff2cab8c5aaf80996a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e5fb38c30060990257624bda6e3960"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa6e5fb38c30060990257624bda6e3960"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindB</b> (std::string const &amp;Name, bool const &amp;Default=false) const </td></tr>
<tr class="separator:aa6e5fb38c30060990257624bda6e3960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1682075e96a38ce53067bc34d3edbb4b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1682075e96a38ce53067bc34d3edbb4b"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>FindAny</b> (const char *Name, const char *Default=0) const </td></tr>
<tr class="separator:a1682075e96a38ce53067bc34d3edbb4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c8d07c5cc53218a1b3fb3659128d5d3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5c8d07c5cc53218a1b3fb3659128d5d3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (const std::string &amp;Name, const std::string &amp;Value)</td></tr>
<tr class="separator:a5c8d07c5cc53218a1b3fb3659128d5d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3d0ea4eb16eb609c544bb305ec0016e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae3d0ea4eb16eb609c544bb305ec0016e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CndSet</b> (const char *Name, const std::string &amp;Value)</td></tr>
<tr class="separator:ae3d0ea4eb16eb609c544bb305ec0016e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38668d470479b51d926069ba2294e091"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a38668d470479b51d926069ba2294e091"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CndSet</b> (const char *Name, const int Value)</td></tr>
<tr class="separator:a38668d470479b51d926069ba2294e091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51dd0c6878731bdf68eea3e31a214b52"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a51dd0c6878731bdf68eea3e31a214b52"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (const char *Name, const std::string &amp;Value)</td></tr>
<tr class="separator:a51dd0c6878731bdf68eea3e31a214b52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a698036176655aadb406228c39780c5e0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a698036176655aadb406228c39780c5e0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (const char *Name, const int &amp;Value)</td></tr>
<tr class="separator:a698036176655aadb406228c39780c5e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0812b41f51d492c3b873dccbd7e8df0e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0812b41f51d492c3b873dccbd7e8df0e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Exists</b> (const std::string &amp;Name) const </td></tr>
<tr class="separator:a0812b41f51d492c3b873dccbd7e8df0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff619979652f706bf8342bb05055bc43"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aff619979652f706bf8342bb05055bc43"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Exists</b> (const char *Name) const </td></tr>
<tr class="separator:aff619979652f706bf8342bb05055bc43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a940c54d2f08a52a25166021ce2be40ba"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a940c54d2f08a52a25166021ce2be40ba"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ExistsAny</b> (const char *Name) const </td></tr>
<tr class="separator:a940c54d2f08a52a25166021ce2be40ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6219214a423e6371727e1794b25bf33"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac6219214a423e6371727e1794b25bf33"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> (const std::string &amp;Name)</td></tr>
<tr class="separator:ac6219214a423e6371727e1794b25bf33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71d36872f416feaa853788a7a7a7ef8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa71d36872f416feaa853788a7a7a7ef8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="separator:aa71d36872f416feaa853788a7a7a7ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a248ff420b60b5b6e8f1bf8443b64b4ac"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a248ff420b60b5b6e8f1bf8443b64b4ac"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> (std::string const &amp;List, std::string const &amp;Value)</td></tr>
<tr class="separator:a248ff420b60b5b6e8f1bf8443b64b4ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c9d5bbe2426dd5fa2b38f7323d70cd8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2c9d5bbe2426dd5fa2b38f7323d70cd8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> (std::string const &amp;List, int const &amp;Value)</td></tr>
<tr class="separator:a2c9d5bbe2426dd5fa2b38f7323d70cd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48f29adb8ef9215ae99ff0fb25498712"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a48f29adb8ef9215ae99ff0fb25498712"></a>
const <a class="el" href="structConfiguration_1_1Item.xhtml">Item</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Tree</b> (const char *Name) const </td></tr>
<tr class="separator:a48f29adb8ef9215ae99ff0fb25498712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a793169e06e9183e678805ce0663b6000"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a793169e06e9183e678805ce0663b6000"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Dump</b> ()</td></tr>
<tr class="separator:a793169e06e9183e678805ce0663b6000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b2730c72d8c133ff3acca2fd366d59"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a70b2730c72d8c133ff3acca2fd366d59"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Dump</b> (std::ostream &amp;str)</td></tr>
<tr class="separator:a70b2730c72d8c133ff3acca2fd366d59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ce1048aa489d7271590cfa627fa5f44"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1ce1048aa489d7271590cfa627fa5f44"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Dump</b> (std::ostream &amp;str, char const *const root, char const *const format, bool const emptyValue)</td></tr>
<tr class="separator:a1ce1048aa489d7271590cfa627fa5f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7589283aa8058ca4c15e27bcff331aa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa7589283aa8058ca4c15e27bcff331aa"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>Configuration</b> (const <a class="el" href="structConfiguration_1_1Item.xhtml">Item</a> *Root)</td></tr>
<tr class="separator:aa7589283aa8058ca4c15e27bcff331aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ad1eca8079af54e85187fe70ee00cf64f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; string &gt; FindVector </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>Default</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return a list of child options</p>
<p>Options like Acquire::Languages are handled as lists which can be overridden and have a default. For the later two a comma separated list of values is supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>of the parent node </td></tr>
    <tr><td class="paramname">Default</td><td>list of values separated by commas </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classEDSP.xhtml#ab924df74c17e392db3f28e6157e9c462">EDSP::ExecuteSolver()</a>, <a class="el" href="classAPT_1_1Configuration.xhtml#a21db1e0ec61c9efdb73722de53bfb522">getArchitectures()</a>, <a class="el" href="classAPT_1_1Configuration.xhtml#a67e7225b95c373ca6ae179a19bdc6ad2">getBuildProfiles()</a>, <a class="el" href="classAPT_1_1Configuration.xhtml#ac7fa3aafc2583adf52f72f0ae17889db">getCompressionTypes()</a>, <a class="el" href="classAPT_1_1Configuration.xhtml#a31677eaae0e2b91beb0ac16cfb5ae197">getCompressors()</a>, and <a class="el" href="classAPT_1_1Configuration.xhtml#acc33f2047d937d29e30aab9d5996dbae">getLanguages()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>apt-pkg/contrib/<a class="el" href="configuration_8h_source.xhtml">configuration.h</a></li>
<li>apt-pkg/contrib/configuration.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
