<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: apt-pkg/edsp.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">edsp.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="edsp_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span>                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#ifndef PKGLIB_EDSP_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PKGLIB_EDSP_H</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="cacheset_8h.xhtml">apt-pkg/cacheset.h</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/cacheiterators.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/macros.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef APT_8_CLEANER_HEADERS</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;apt-pkg/depcache.h&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/progress.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">class </span><a class="code" href="classOpProgress.xhtml">OpProgress</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classEDSP.xhtml">   30</a></span>&#160;<span class="keyword">class </span><a class="code" href="classEDSP.xhtml">EDSP</a>                                                              <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="comment">// we could use pkgCache::DepType and ::Priority, but these would be localized stringsâ€¦</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span> PrioMap[];</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span> DepMap[];</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        APT_HIDDEN <span class="keywordtype">bool</span> <span class="keyword">static</span> ReadLine(<span class="keywordtype">int</span> <span class="keyword">const</span> input, std::string &amp;line);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        APT_HIDDEN <span class="keywordtype">bool</span> <span class="keyword">static</span> StringToBool(<span class="keywordtype">char</span> <span class="keyword">const</span> *answer, <span class="keywordtype">bool</span> <span class="keyword">const</span> defValue);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        APT_HIDDEN <span class="keywordtype">void</span> <span class="keyword">static</span> WriteScenarioVersion(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache, FILE* output,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                         <a class="code" href="classpkgCache_1_1PkgIterator.xhtml">pkgCache::PkgIterator</a> <span class="keyword">const</span> &amp;Pkg,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                         <a class="code" href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a> <span class="keyword">const</span> &amp;Ver);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        APT_HIDDEN <span class="keywordtype">void</span> <span class="keyword">static</span> WriteScenarioDependency(FILE* output,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                            <a class="code" href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a> <span class="keyword">const</span> &amp;Ver);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        APT_HIDDEN <span class="keywordtype">void</span> <span class="keyword">static</span> WriteScenarioLimitedDependency(FILE* output,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                                   <a class="code" href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a> <span class="keyword">const</span> &amp;Ver,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                   <a class="code" href="classAPT_1_1PackageContainer.xhtml">APT::PackageSet</a> <span class="keyword">const</span> &amp;pkgset);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a9b51518ce0d064a65b6dfe92c8bb3452">WriteRequest</a>(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache, FILE* output,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                 <span class="keywordtype">bool</span> <span class="keyword">const</span> upgrade = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                 <span class="keywordtype">bool</span> <span class="keyword">const</span> distUpgrade = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                 <span class="keywordtype">bool</span> <span class="keyword">const</span> autoRemove = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                <a class="code" href="classOpProgress.xhtml">OpProgress</a> *Progress = NULL);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#ad58f6220271e16fb3ba6b5f72b3867a0">WriteScenario</a>(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache, FILE* output, <a class="code" href="classOpProgress.xhtml">OpProgress</a> *Progress = NULL);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a24c166448b3f5609833e119c6d959db0">WriteLimitedScenario</a>(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache, FILE* output,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                         <a class="code" href="classAPT_1_1PackageContainer.xhtml">APT::PackageSet</a> <span class="keyword">const</span> &amp;pkgset,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                         <a class="code" href="classOpProgress.xhtml">OpProgress</a> *Progress = NULL);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a09e6a4e219c1ae943e206589a7b73184">ReadResponse</a>(<span class="keywordtype">int</span> <span class="keyword">const</span> input, <a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache, <a class="code" href="classOpProgress.xhtml">OpProgress</a> *Progress = NULL);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a6ff6a4cf2a5518fe3c1997d0ce64b3f0">ReadRequest</a>(<span class="keywordtype">int</span> <span class="keyword">const</span> input, std::list&lt;std::string&gt; &amp;install,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                        std::list&lt;std::string&gt; &amp;<span class="keyword">remove</span>, <span class="keywordtype">bool</span> &amp;upgrade,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                        <span class="keywordtype">bool</span> &amp;distUpgrade, <span class="keywordtype">bool</span> &amp;autoRemove);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a1eb0e2b98edb642d411ab78b75522671">ApplyRequest</a>(std::list&lt;std::string&gt; <span class="keyword">const</span> &amp;install,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                 std::list&lt;std::string&gt; <span class="keyword">const</span> &amp;<span class="keyword">remove</span>,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                 <a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#ab1b2ab693f351d54087828e9bff6895e">WriteSolution</a>(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache, FILE* output);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a55e69a064b2cde3e615a283a22ccec4c">WriteProgress</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <span class="keyword">const</span> percent, <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> message, FILE* output);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a1da459470c7b76ddfd3f09edceeecc55">WriteError</a>(<span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> uuid, std::string <span class="keyword">const</span> &amp;message, FILE* output);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        pid_t <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#ab924df74c17e392db3f28e6157e9c462">ExecuteSolver</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> solver, <span class="keywordtype">int</span> * <span class="keyword">const</span> solver_in, <span class="keywordtype">int</span> * <span class="keyword">const</span> solver_out, <span class="keywordtype">bool</span> <span class="comment">/*overload*/</span>);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        APT_DEPRECATED <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#ab924df74c17e392db3f28e6157e9c462">ExecuteSolver</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> solver, <span class="keywordtype">int</span> *solver_in, <span class="keywordtype">int</span> *solver_out);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classEDSP.xhtml#a765574bc994f3d2175bbebdea1b85842">ResolveExternal</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> solver, <a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache,</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                    <span class="keywordtype">bool</span> <span class="keyword">const</span> upgrade, <span class="keywordtype">bool</span> <span class="keyword">const</span> distUpgrade,</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                    <span class="keywordtype">bool</span> <span class="keyword">const</span> autoRemove, <a class="code" href="classOpProgress.xhtml">OpProgress</a> *Progress = NULL);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;};</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classEDSP_xhtml_ab1b2ab693f351d54087828e9bff6895e"><div class="ttname"><a href="classEDSP.xhtml#ab1b2ab693f351d54087828e9bff6895e">EDSP::WriteSolution</a></div><div class="ttdeci">static bool WriteSolution(pkgDepCache &amp;Cache, FILE *output)</div><div class="ttdoc">encodes the changes in the Cache as a EDSP solution </div><div class="ttdef"><b>Definition:</b> edsp.cc:504</div></div>
<div class="ttc" id="classOpProgress_xhtml"><div class="ttname"><a href="classOpProgress.xhtml">OpProgress</a></div><div class="ttdef"><b>Definition:</b> progress.h:33</div></div>
<div class="ttc" id="classEDSP_xhtml_a9b51518ce0d064a65b6dfe92c8bb3452"><div class="ttname"><a href="classEDSP.xhtml#a9b51518ce0d064a65b6dfe92c8bb3452">EDSP::WriteRequest</a></div><div class="ttdeci">static bool WriteRequest(pkgDepCache &amp;Cache, FILE *output, bool const upgrade=false, bool const distUpgrade=false, bool const autoRemove=false, OpProgress *Progress=NULL)</div><div class="ttdoc">creates the EDSP request stanza </div><div class="ttdef"><b>Definition:</b> edsp.cc:236</div></div>
<div class="ttc" id="classpkgDepCache_xhtml"><div class="ttname"><a href="classpkgDepCache.xhtml">pkgDepCache</a></div><div class="ttdef"><b>Definition:</b> depcache.h:65</div></div>
<div class="ttc" id="cacheset_8h_xhtml"><div class="ttname"><a href="cacheset_8h.xhtml">cacheset.h</a></div></div>
<div class="ttc" id="classEDSP_xhtml_a1da459470c7b76ddfd3f09edceeecc55"><div class="ttname"><a href="classEDSP.xhtml#a1da459470c7b76ddfd3f09edceeecc55">EDSP::WriteError</a></div><div class="ttdeci">static bool WriteError(char const *const uuid, std::string const &amp;message, FILE *output)</div><div class="ttdoc">sends an error report </div><div class="ttdef"><b>Definition:</b> edsp.cc:545</div></div>
<div class="ttc" id="classpkgCache_1_1VerIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:190</div></div>
<div class="ttc" id="classEDSP_xhtml"><div class="ttname"><a href="classEDSP.xhtml">EDSP</a></div><div class="ttdef"><b>Definition:</b> edsp.h:30</div></div>
<div class="ttc" id="classEDSP_xhtml_a09e6a4e219c1ae943e206589a7b73184"><div class="ttname"><a href="classEDSP.xhtml#a09e6a4e219c1ae943e206589a7b73184">EDSP::ReadResponse</a></div><div class="ttdeci">static bool ReadResponse(int const input, pkgDepCache &amp;Cache, OpProgress *Progress=NULL)</div><div class="ttdoc">waits and acts on the information returned from the solver </div><div class="ttdef"><b>Definition:</b> edsp.cc:291</div></div>
<div class="ttc" id="classEDSP_xhtml_ad58f6220271e16fb3ba6b5f72b3867a0"><div class="ttname"><a href="classEDSP.xhtml#ad58f6220271e16fb3ba6b5f72b3867a0">EDSP::WriteScenario</a></div><div class="ttdeci">static bool WriteScenario(pkgDepCache &amp;Cache, FILE *output, OpProgress *Progress=NULL)</div><div class="ttdoc">creates the scenario representing the package universe </div><div class="ttdef"><b>Definition:</b> edsp.cc:49</div></div>
<div class="ttc" id="classAPT_1_1PackageContainer_xhtml"><div class="ttname"><a href="classAPT_1_1PackageContainer.xhtml">APT::PackageContainer</a></div><div class="ttdef"><b>Definition:</b> cacheset.h:170</div></div>
<div class="ttc" id="classEDSP_xhtml_a24c166448b3f5609833e119c6d959db0"><div class="ttname"><a href="classEDSP.xhtml#a24c166448b3f5609833e119c6d959db0">EDSP::WriteLimitedScenario</a></div><div class="ttdeci">static bool WriteLimitedScenario(pkgDepCache &amp;Cache, FILE *output, APT::PackageSet const &amp;pkgset, OpProgress *Progress=NULL)</div><div class="ttdoc">creates a limited scenario representing the package universe </div><div class="ttdef"><b>Definition:</b> edsp.cc:73</div></div>
<div class="ttc" id="classEDSP_xhtml_a765574bc994f3d2175bbebdea1b85842"><div class="ttname"><a href="classEDSP.xhtml#a765574bc994f3d2175bbebdea1b85842">EDSP::ResolveExternal</a></div><div class="ttdeci">static bool ResolveExternal(const char *const solver, pkgDepCache &amp;Cache, bool const upgrade, bool const distUpgrade, bool const autoRemove, OpProgress *Progress=NULL)</div><div class="ttdoc">call an external resolver to handle the request </div><div class="ttdef"><b>Definition:</b> edsp.cc:606</div></div>
<div class="ttc" id="classEDSP_xhtml_a55e69a064b2cde3e615a283a22ccec4c"><div class="ttname"><a href="classEDSP.xhtml#a55e69a064b2cde3e615a283a22ccec4c">EDSP::WriteProgress</a></div><div class="ttdeci">static bool WriteProgress(unsigned short const percent, const char *const message, FILE *output)</div><div class="ttdoc">sends a progress report </div><div class="ttdef"><b>Definition:</b> edsp.cc:536</div></div>
<div class="ttc" id="classEDSP_xhtml_a1eb0e2b98edb642d411ab78b75522671"><div class="ttname"><a href="classEDSP.xhtml#a1eb0e2b98edb642d411ab78b75522671">EDSP::ApplyRequest</a></div><div class="ttdeci">static bool ApplyRequest(std::list&lt; std::string &gt; const &amp;install, std::list&lt; std::string &gt; const &amp;remove, pkgDepCache &amp;Cache)</div><div class="ttdoc">takes the request lists and applies it on the cache </div><div class="ttdef"><b>Definition:</b> edsp.cc:479</div></div>
<div class="ttc" id="classEDSP_xhtml_ab924df74c17e392db3f28e6157e9c462"><div class="ttname"><a href="classEDSP.xhtml#ab924df74c17e392db3f28e6157e9c462">EDSP::ExecuteSolver</a></div><div class="ttdeci">static pid_t ExecuteSolver(const char *const solver, int *const solver_in, int *const solver_out, bool)</div><div class="ttdoc">executes the given solver and returns the pipe ends </div><div class="ttdef"><b>Definition:</b> edsp.cc:552</div></div>
<div class="ttc" id="pkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file </div></div>
<div class="ttc" id="classEDSP_xhtml_a6ff6a4cf2a5518fe3c1997d0ce64b3f0"><div class="ttname"><a href="classEDSP.xhtml#a6ff6a4cf2a5518fe3c1997d0ce64b3f0">EDSP::ReadRequest</a></div><div class="ttdeci">static bool ReadRequest(int const input, std::list&lt; std::string &gt; &amp;install, std::list&lt; std::string &gt; &amp;remove, bool &amp;upgrade, bool &amp;distUpgrade, bool &amp;autoRemove)</div><div class="ttdoc">search and read the request stanza for action later </div><div class="ttdef"><b>Definition:</b> edsp.cc:406</div></div>
<div class="ttc" id="classpkgCache_1_1PkgIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1PkgIterator.xhtml">pkgCache::PkgIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:141</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
