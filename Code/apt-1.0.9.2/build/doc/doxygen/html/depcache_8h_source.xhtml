<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: apt-pkg/depcache.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">depcache.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: c++; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// $Id: depcache.h,v 1.14 2001/02/20 07:03:17 jgg Exp $</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* ######################################################################</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">   DepCache - Dependency Extension data for the cache</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">   This class stores the cache data and a set of extension structures for</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">   monitoring the current state of all the packages. It also generates and</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">   caches the &#39;install&#39; state of many things. This refers to the state of the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">   package after an install has been run.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">   The StateCache::State field can be -1,0,1,2 which is &lt;,=,&gt;,no current.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">   StateCache::Mode is which of the 3 fields is active.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">   This structure is important to support the readonly status of the cache </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">   file. When the data is saved the cache will be refereshed from our </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   internal rep and written to disk. Then the actual persistent data</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">   files will be put on the disk.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Each dependency is compared against 3 target versions to produce to</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">   3 dependency results.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">     Now - Compared using the Currently install version</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">     Install - Compared using the install version (final state)</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">     CVer - (Candidate Verion) Compared using the Candidate Version</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">   The candidate and now results are used to decide wheather a package</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">   should be automatically installed or if it should be left alone.</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">   Remember, the Candidate Version is selected based on the distribution</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">   settings for the Package. The Install Version is selected based on the</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">   state (Delete, Keep, Install) field and can be either the Current Version</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">   or the Candidate version.</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   The Candidate version is what is shown the &#39;Install Version&#39; field.</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">   ##################################################################### */</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#ifndef PKGLIB_DEPCACHE_H</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PKGLIB_DEPCACHE_H</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/configuration.h&gt;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/cacheiterators.h&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/macros.h&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#ifndef APT_8_CLEANER_HEADERS</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;apt-pkg/progress.h&gt;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/error.h&gt;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#ifndef APT_10_CLEANER_HEADERS</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">class </span><a class="code" href="classOpProgress.xhtml">OpProgress</a>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgVersioningSystem.xhtml">pkgVersioningSystem</a>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classpkgDepCache.xhtml">   65</a></span>&#160;<span class="keyword">class </span><a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> : <span class="keyword">protected</span> <a class="code" href="classpkgCache_1_1Namespace.xhtml">pkgCache::Namespace</a></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classpkgDepCache_1_1InRootSetFunc.xhtml">   70</a></span>&#160;   <span class="keyword">class </span><a class="code" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;     <span class="keyword">virtual</span> <span class="keywordtype">bool</span> InRootSet(<span class="keyword">const</span> <a class="code" href="classpkgCache_1_1PkgIterator.xhtml">pkgCache::PkgIterator</a> &amp;<span class="comment">/*pkg*/</span>) {<span class="keywordflow">return</span> <span class="keyword">false</span>;};</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     <span class="keyword">virtual</span> ~<a class="code" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a>() {};</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;   };</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;   <span class="keywordtype">void</span> MarkPackage(<span class="keyword">const</span> <a class="code" href="classpkgCache_1_1PkgIterator.xhtml">pkgCache::PkgIterator</a> &amp;pkg,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a> &amp;ver,</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    <span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;follow_recommends,</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    <span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;follow_suggests);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;   <span class="keywordtype">bool</span> MarkRequired(<a class="code" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a> &amp;rootFunc);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   <span class="keywordtype">bool</span> Sweep();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;   </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;   <span class="comment">// These flags are used in DepState</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;   <span class="keyword">enum</span> DepFlags {DepNow = (1 &lt;&lt; 0),DepInstall = (1 &lt;&lt; 1),DepCVer = (1 &lt;&lt; 2),</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                  DepGNow = (1 &lt;&lt; 3),DepGInstall = (1 &lt;&lt; 4),DepGCVer = (1 &lt;&lt; 5)};</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;   <span class="comment">// These flags are used in StateCache::DepState</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;   <span class="keyword">enum</span> DepStateFlags {DepNowPolicy = (1 &lt;&lt; 0), DepNowMin = (1 &lt;&lt; 1),</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                       DepInstPolicy = (1 &lt;&lt; 2), DepInstMin = (1 &lt;&lt; 3),</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                       DepCandPolicy = (1 &lt;&lt; 4), DepCandMin = (1 &lt;&lt; 5)};</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;   </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;   <span class="comment">// These flags are used in StateCache::iFlags</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;   <span class="keyword">enum</span> InternalFlags {AutoKept = (1 &lt;&lt; 0), Purge = (1 &lt;&lt; 1), ReInstall = (1 &lt;&lt; 2), Protected = (1 &lt;&lt; 3)};</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;   <span class="keyword">enum</span> VersionTypes {NowVersion, InstallVersion, CandidateVersion};</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;   <span class="keyword">enum</span> ModeList {ModeDelete = 0, ModeKeep = 1, ModeInstall = 2, ModeGarbage = 3};</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classpkgDepCache_1_1ActionGroup.xhtml">  165</a></span>&#160;   <span class="keyword">class </span><a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml">ActionGroup</a></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;   {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;       <a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;cache;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;       <span class="keywordtype">bool</span> released;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;       <a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml">ActionGroup</a>(<span class="keyword">const</span> <a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml">ActionGroup</a> &amp;other);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;       <a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml">ActionGroup</a>(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;cache);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;       <span class="keywordtype">void</span> <a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml#a23b477d0e2d399f75d585d154c346591">release</a>();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;       <a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml#ae23e9160a48c2bc17b7d1abffd745deb">~ActionGroup</a>();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;   };</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml">  201</a></span>&#160;   <span class="keyword">class </span><a class="code" href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml">DefaultRootSetFunc</a> : <span class="keyword">public</span> <a class="code" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a>, <span class="keyword">public</span> <a class="code" href="classConfiguration_1_1MatchAgainstConfig.xhtml">Configuration::MatchAgainstConfig</a></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;   {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;     <a class="code" href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml">DefaultRootSetFunc</a>() : <a class="code" href="classConfiguration_1_1MatchAgainstConfig.xhtml">Configuration::MatchAgainstConfig</a>(<span class="stringliteral">&quot;APT::NeverAutoRemove&quot;</span>) {};</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;     <span class="keyword">virtual</span> ~<a class="code" href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml">DefaultRootSetFunc</a>() {};</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;     <span class="keywordtype">bool</span> InRootSet(<span class="keyword">const</span> <a class="code" href="classpkgCache_1_1PkgIterator.xhtml">pkgCache::PkgIterator</a> &amp;pkg) { <span class="keywordflow">return</span> pkg.end() == <span class="keyword">false</span> &amp;&amp; <a class="code" href="classConfiguration_1_1MatchAgainstConfig.xhtml#a6b22196d9933bb73b60e258c2a8263b3">Match</a>(pkg.Name()); };</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;   };</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="structpkgDepCache_1_1StateCache.xhtml">  210</a></span>&#160;   <span class="keyword">struct </span><a class="code" href="structpkgDepCache_1_1StateCache.xhtml">StateCache</a></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;   {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      <span class="comment">// Epoch stripped text versions of the two version fields</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *CandVersion;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *CurVersion;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      <span class="comment">// Pointer to the candidate install version. </span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      Version *CandidateVer;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="comment">// Pointer to the install version.</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      Version *InstallVer;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="comment">// Copy of Package::Flags</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> Flags;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> iFlags;           <span class="comment">// Internal flags</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="structpkgDepCache_1_1StateCache.xhtml#a72d73f7024c40960ff644d3270bb482c">  227</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="structpkgDepCache_1_1StateCache.xhtml#a72d73f7024c40960ff644d3270bb482c">Marked</a>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="structpkgDepCache_1_1StateCache.xhtml#a568795a48143af2663ad3dc310d3074c">  235</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="structpkgDepCache_1_1StateCache.xhtml#a568795a48143af2663ad3dc310d3074c">Garbage</a>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="comment">// Various tree indicators</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordtype">signed</span> <span class="keywordtype">char</span> Status;              <span class="comment">// -1,0,1,2</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> Mode;              <span class="comment">// ModeList</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> DepState;          <span class="comment">// DepState Flags</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="comment">// Update of candidate version</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *StripEpoch(<span class="keyword">const</span> <span class="keywordtype">char</span> *Ver) APT_PURE;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <span class="keywordtype">void</span> Update(<a class="code" href="classpkgCache_1_1PkgIterator.xhtml">PkgIterator</a> Pkg,<a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;Cache);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <span class="comment">// Various test members for the current status of the package</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> NewInstall()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Status == 2 &amp;&amp; Mode == ModeInstall;};</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Delete()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Mode == ModeDelete;};</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Purge()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Delete() == <span class="keyword">true</span> &amp;&amp; (iFlags &amp; pkgDepCache::Purge) == pkgDepCache::Purge; };</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Keep()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Mode == ModeKeep;};</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Protect()<span class="keyword"> const </span>{<span class="keywordflow">return</span> (iFlags &amp; Protected) == Protected;};</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Upgrade()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Status &gt; 0 &amp;&amp; Mode == ModeInstall;};</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Upgradable()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Status &gt;= 1;};</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Downgrade()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Status &lt; 0 &amp;&amp; Mode == ModeInstall;};</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Held()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Status != 0 &amp;&amp; Keep();};</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> NowBroken()<span class="keyword"> const </span>{<span class="keywordflow">return</span> (DepState &amp; DepNowMin) != DepNowMin;};</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> NowPolicyBroken()<span class="keyword"> const </span>{<span class="keywordflow">return</span> (DepState &amp; DepNowPolicy) != DepNowPolicy;};</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> InstBroken()<span class="keyword"> const </span>{<span class="keywordflow">return</span> (DepState &amp; DepInstMin) != DepInstMin;};</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> InstPolicyBroken()<span class="keyword"> const </span>{<span class="keywordflow">return</span> (DepState &amp; DepInstPolicy) != DepInstPolicy;};</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> Install()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Mode == ModeInstall;};</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keyword">inline</span> <span class="keywordtype">bool</span> ReInstall()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Delete() == <span class="keyword">false</span> &amp;&amp; (iFlags &amp; pkgDepCache::ReInstall) == pkgDepCache::ReInstall;};</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keyword">inline</span> VerIterator InstVerIter(<a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;Cache)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                {<span class="keywordflow">return</span> VerIterator(Cache,InstallVer);};</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keyword">inline</span> VerIterator CandidateVerIter(<a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;Cache)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                {<span class="keywordflow">return</span> VerIterator(Cache,CandidateVer);};</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;   };</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;   </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;   <span class="comment">// Helper functions</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;   <span class="keywordtype">void</span> BuildGroupOrs(VerIterator <span class="keyword">const</span> &amp;V);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;   <span class="keywordtype">void</span> UpdateVerState(PkgIterator Pkg);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;   <span class="comment">// User Policy control</span></div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="classpkgDepCache_1_1Policy.xhtml">  273</a></span>&#160;   <span class="keyword">class </span><a class="code" href="classpkgDepCache_1_1Policy.xhtml">Policy</a></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;   {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keyword">public</span>:</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <a class="code" href="classpkgDepCache_1_1Policy.xhtml">Policy</a>() {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;         InstallRecommends = _config-&gt;FindB(<span class="stringliteral">&quot;APT::Install-Recommends&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;         InstallSuggests = _config-&gt;FindB(<span class="stringliteral">&quot;APT::Install-Suggests&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classpkgCache_1_1VerIterator.xhtml">VerIterator</a> GetCandidateVer(<a class="code" href="classpkgCache_1_1PkgIterator.xhtml">PkgIterator</a> <span class="keyword">const</span> &amp;Pkg);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache_1_1Policy.xhtml#abec8ff6462cd8e729dcadf1014871d84">IsImportantDep</a>(<a class="code" href="classpkgCache_1_1DepIterator.xhtml">DepIterator</a> <span class="keyword">const</span> &amp;Dep);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">signed</span> <span class="keywordtype">short</span> GetPriority(<a class="code" href="classpkgCache_1_1PkgIterator.xhtml">PkgIterator</a> <span class="keyword">const</span> &amp;Pkg);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">signed</span> <span class="keywordtype">short</span> GetPriority(<a class="code" href="classpkgCache_1_1PkgFileIterator.xhtml">PkgFileIterator</a> <span class="keyword">const</span> &amp;File);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classpkgDepCache_1_1Policy.xhtml">Policy</a>() {};</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <span class="keyword">private</span>:</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      <span class="keywordtype">bool</span> InstallRecommends;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="keywordtype">bool</span> InstallSuggests;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;   };</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;   <span class="keywordtype">int</span> group_level;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;   <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classpkgDepCache_1_1ActionGroup.xhtml">ActionGroup</a>;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;     </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;   <span class="comment">// State information</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;   <a class="code" href="classpkgCache.xhtml">pkgCache</a> *Cache;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;   <a class="code" href="structpkgDepCache_1_1StateCache.xhtml">StateCache</a> *PkgState;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *DepState;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="classpkgDepCache.xhtml#ab49a20f20f37cf4879e2ee750220e285">  309</a></span>&#160;   <span class="keywordtype">signed</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <a class="code" href="classpkgDepCache.xhtml#ab49a20f20f37cf4879e2ee750220e285">iUsrSize</a>;</div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classpkgDepCache.xhtml#a3d3b83546b872ad372361b470d463f45">  311</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <a class="code" href="classpkgDepCache.xhtml#a3d3b83546b872ad372361b470d463f45">iDownloadSize</a>;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> iInstCount;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> iDelCount;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> iKeepCount;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> iBrokenCount;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> iPolicyBrokenCount;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> iBadCount;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;   <span class="keywordtype">bool</span> DebugMarker;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;   <span class="keywordtype">bool</span> DebugAutoInstall;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;   <a class="code" href="classpkgDepCache_1_1Policy.xhtml">Policy</a> *delLocalPolicy;           <span class="comment">// For memory clean up..</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;   <a class="code" href="classpkgDepCache_1_1Policy.xhtml">Policy</a> *LocalPolicy;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;   </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;   <span class="comment">// Check for a matching provides</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;   <span class="keywordtype">bool</span> CheckDep(<a class="code" href="classpkgCache_1_1DepIterator.xhtml">DepIterator</a> Dep,<span class="keywordtype">int</span> Type,<a class="code" href="classpkgCache_1_1PkgIterator.xhtml">PkgIterator</a> &amp;Res);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">bool</span> CheckDep(<a class="code" href="classpkgCache_1_1DepIterator.xhtml">DepIterator</a> Dep,<span class="keywordtype">int</span> Type)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;   {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      <a class="code" href="classpkgCache_1_1PkgIterator.xhtml">PkgIterator</a> Res(*<span class="keyword">this</span>,0);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      <span class="keywordflow">return</span> CheckDep(Dep,Type,Res);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;   }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;   </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;   <span class="comment">// Computes state information for deps and versions (w/o storing)</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> DependencyState(DepIterator &amp;D);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> VersionState(DepIterator D,<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> Check,</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> SetMin,</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> SetPolicy);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;   <span class="comment">// Recalculates various portions of the cache, call after changing something</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;   <span class="keywordtype">void</span> Update(DepIterator Dep);           <span class="comment">// Mostly internal</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;   <span class="keywordtype">void</span> Update(PkgIterator <span class="keyword">const</span> &amp;P);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;   </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;   <span class="comment">// Count manipulators</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;   <span class="keywordtype">void</span> AddSizes(<span class="keyword">const</span> PkgIterator &amp;Pkg, <span class="keywordtype">bool</span> <span class="keyword">const</span> Invert = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">void</span> RemoveSizes(<span class="keyword">const</span> PkgIterator &amp;Pkg) {AddSizes(Pkg, <span class="keyword">true</span>);};</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;   <span class="keywordtype">void</span> AddStates(<span class="keyword">const</span> PkgIterator &amp;Pkg, <span class="keywordtype">bool</span> <span class="keyword">const</span> Invert = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">void</span> RemoveStates(<span class="keyword">const</span> PkgIterator &amp;Pkg) {AddStates(Pkg,<span class="keyword">true</span>);};</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;   </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;   <span class="comment">// Legacy.. We look like a pkgCache</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;   <span class="keyword">inline</span> <span class="keyword">operator</span> <a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;() {<span class="keywordflow">return</span> *Cache;};</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;   <span class="keyword">inline</span> Header &amp;Head() {<span class="keywordflow">return</span> *Cache-&gt;HeaderP;};</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;   <span class="keyword">inline</span> GrpIterator GrpBegin() {<span class="keywordflow">return</span> Cache-&gt;GrpBegin();};</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;   <span class="keyword">inline</span> PkgIterator PkgBegin() {<span class="keywordflow">return</span> Cache-&gt;PkgBegin();};</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;   <span class="keyword">inline</span> GrpIterator FindGrp(std::string <span class="keyword">const</span> &amp;Name) {<span class="keywordflow">return</span> Cache-&gt;FindGrp(Name);};</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;   <span class="keyword">inline</span> PkgIterator FindPkg(std::string <span class="keyword">const</span> &amp;Name) {<span class="keywordflow">return</span> Cache-&gt;FindPkg(Name);};</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;   <span class="keyword">inline</span> PkgIterator FindPkg(std::string <span class="keyword">const</span> &amp;Name, std::string <span class="keyword">const</span> &amp;Arch) {<span class="keywordflow">return</span> Cache-&gt;FindPkg(Name, Arch);};</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;   <span class="keyword">inline</span> <a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;GetCache() {<span class="keywordflow">return</span> *Cache;};</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;   <span class="keyword">inline</span> <a class="code" href="classpkgVersioningSystem.xhtml">pkgVersioningSystem</a> &amp;VS() {<span class="keywordflow">return</span> *Cache-&gt;VS;};</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;   </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;   <span class="comment">// Policy implementation</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;   <span class="keyword">inline</span> VerIterator GetCandidateVer(PkgIterator <span class="keyword">const</span> &amp;Pkg) {<span class="keywordflow">return</span> LocalPolicy-&gt;GetCandidateVer(Pkg);};</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">bool</span> IsImportantDep(DepIterator Dep) {<span class="keywordflow">return</span> LocalPolicy-&gt;<a class="code" href="classpkgDepCache_1_1Policy.xhtml#abec8ff6462cd8e729dcadf1014871d84">IsImportantDep</a>(Dep);};</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;   <span class="keyword">inline</span> Policy &amp;GetPolicy() {<span class="keywordflow">return</span> *LocalPolicy;};</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;   </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;   <span class="comment">// Accessors</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;   <span class="keyword">inline</span> StateCache &amp;operator [](PkgIterator <span class="keyword">const</span> &amp;I) {<span class="keywordflow">return</span> PkgState[I-&gt;ID];};</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> &amp;operator [](DepIterator <span class="keyword">const</span> &amp;I) {<span class="keywordflow">return</span> DepState[I-&gt;ID];};</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;   <span class="keyword">virtual</span> InRootSetFunc *<a class="code" href="classpkgDepCache.xhtml#a1ab9378572dc74fc8088fd690d494570">GetRootSetFunc</a>();</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache.xhtml#af3287419f765a35b0f1f25e449167718">MarkFollowsRecommends</a>();</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache.xhtml#a9890f74f3e35a54ac7d4f3b5ab00aeb2">MarkFollowsSuggests</a>();</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">  399</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">MarkAndSweep</a>(<a class="code" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a> &amp;rootFunc)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;   {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;     <span class="keywordflow">return</span> MarkRequired(rootFunc) &amp;&amp; Sweep();</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;   }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;   <span class="keywordtype">bool</span> MarkAndSweep()</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;   {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;     std::auto_ptr&lt;InRootSetFunc&gt; f(<a class="code" href="classpkgDepCache.xhtml#a1ab9378572dc74fc8088fd690d494570">GetRootSetFunc</a>());</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;     <span class="keywordflow">if</span>(f.get() != NULL)</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;       <span class="keywordflow">return</span> MarkAndSweep(*f.get());</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;     <span class="keywordflow">else</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;       <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;   }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;   <span class="comment">// @{</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;   <span class="keywordtype">bool</span> MarkKeep(PkgIterator <span class="keyword">const</span> &amp;Pkg, <span class="keywordtype">bool</span> Soft = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                 <span class="keywordtype">bool</span> FromUser = <span class="keyword">true</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> Depth = 0);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;   <span class="keywordtype">bool</span> MarkDelete(PkgIterator <span class="keyword">const</span> &amp;Pkg, <span class="keywordtype">bool</span> MarkPurge = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> Depth = 0, <span class="keywordtype">bool</span> FromUser = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache.xhtml#aab6b1c53f7766ad618b80ebee701b60d">MarkInstall</a>(PkgIterator <span class="keyword">const</span> &amp;Pkg,<span class="keywordtype">bool</span> AutoInst = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> Depth = 0, <span class="keywordtype">bool</span> FromUser = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    <span class="keywordtype">bool</span> ForceImportantDeps = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;   <span class="keywordtype">void</span> MarkProtected(PkgIterator <span class="keyword">const</span> &amp;Pkg) { PkgState[Pkg-&gt;ID].iFlags |= Protected; };</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;   <span class="keywordtype">void</span> SetReInstall(PkgIterator <span class="keyword">const</span> &amp;Pkg,<span class="keywordtype">bool</span> To);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;   <span class="keywordtype">void</span> SetCandidateVersion(VerIterator TargetVer);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;   <span class="keywordtype">bool</span> SetCandidateRelease(<a class="code" href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a> TargetVer,</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                std::string <span class="keyword">const</span> &amp;TargetRel);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;   <span class="keywordtype">bool</span> SetCandidateRelease(<a class="code" href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a> TargetVer,</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                            std::string <span class="keyword">const</span> &amp;TargetRel,</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                            std::list&lt;std::pair&lt;pkgCache::VerIterator, pkgCache::VerIterator&gt; &gt; &amp;Changed);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classpkgDepCache.xhtml#a88a05f968ff34a58f71a896ad15dea4d">MarkAuto</a>(<span class="keyword">const</span> PkgIterator &amp;Pkg, <span class="keywordtype">bool</span> Auto);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;   <span class="comment">// @}</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache.xhtml#a5fdeb68216c5ff24d05181afa44e9e4b">IsInstallOk</a>(<span class="keyword">const</span> PkgIterator &amp;Pkg,<span class="keywordtype">bool</span> AutoInst = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                            <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> Depth = 0, <span class="keywordtype">bool</span> FromUser = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgDepCache.xhtml#a9889a8e869ac184b4366c8bfb1846225">IsDeleteOk</a>(<span class="keyword">const</span> PkgIterator &amp;Pkg,<span class="keywordtype">bool</span> MarkPurge = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                            <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> Depth = 0, <span class="keywordtype">bool</span> FromUser = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;   <span class="comment">// read persistent states</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;   <span class="keywordtype">bool</span> readStateFile(<a class="code" href="classOpProgress.xhtml">OpProgress</a> *prog);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;   <span class="keywordtype">bool</span> writeStateFile(<a class="code" href="classOpProgress.xhtml">OpProgress</a> *prog, <span class="keywordtype">bool</span> InstalledOnly=<span class="keyword">true</span>);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;   </div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;   <span class="comment">// Size queries</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">signed</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> UsrSize() {<span class="keywordflow">return</span> <a class="code" href="classpkgDepCache.xhtml#ab49a20f20f37cf4879e2ee750220e285">iUsrSize</a>;};</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> DebSize() {<span class="keywordflow">return</span> <a class="code" href="classpkgDepCache.xhtml#a3d3b83546b872ad372361b470d463f45">iDownloadSize</a>;};</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> DelCount() {<span class="keywordflow">return</span> iDelCount;};</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> KeepCount() {<span class="keywordflow">return</span> iKeepCount;};</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> InstCount() {<span class="keywordflow">return</span> iInstCount;};</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> BrokenCount() {<span class="keywordflow">return</span> iBrokenCount;};</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> PolicyBrokenCount() {<span class="keywordflow">return</span> iPolicyBrokenCount;};</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> BadCount() {<span class="keywordflow">return</span> iBadCount;};</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;   <span class="keywordtype">bool</span> Init(<a class="code" href="classOpProgress.xhtml">OpProgress</a> *Prog);</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;   <span class="comment">// Generate all state information</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;   <span class="keywordtype">void</span> Update(<a class="code" href="classOpProgress.xhtml">OpProgress</a> *Prog = 0);</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;   <a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a>(<a class="code" href="classpkgCache.xhtml">pkgCache</a> *Cache,Policy *Plcy = 0);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a>();</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;   <span class="comment">// methods call by IsInstallOk</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;   <span class="keywordtype">bool</span> IsInstallOkMultiArchSameVersionSynced(PkgIterator <span class="keyword">const</span> &amp;Pkg,</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;         <span class="keywordtype">bool</span> <span class="keyword">const</span> AutoInst, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keyword">const</span> Depth, <span class="keywordtype">bool</span> <span class="keyword">const</span> FromUser);</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;   <span class="keywordtype">bool</span> IsInstallOkDependenciesSatisfiableByCandidates(PkgIterator <span class="keyword">const</span> &amp;Pkg,</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="keywordtype">bool</span> <span class="keyword">const</span> AutoInst, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keyword">const</span> Depth, <span class="keywordtype">bool</span> <span class="keyword">const</span> FromUser);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;   <span class="comment">// methods call by IsDeleteOk</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;   <span class="keywordtype">bool</span> IsDeleteOkProtectInstallRequests(PkgIterator <span class="keyword">const</span> &amp;Pkg,</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;         <span class="keywordtype">bool</span> <span class="keyword">const</span> rPurge, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keyword">const</span> Depth, <span class="keywordtype">bool</span> <span class="keyword">const</span> FromUser);</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;   <span class="keywordtype">bool</span> IsModeChangeOk(ModeList <span class="keyword">const</span> mode, PkgIterator <span class="keyword">const</span> &amp;Pkg,</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keyword">const</span> Depth, <span class="keywordtype">bool</span> <span class="keyword">const</span> FromUser);</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;};</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classpkgCache_1_1DepIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:269</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_a3d3b83546b872ad372361b470d463f45"><div class="ttname"><a href="classpkgDepCache.xhtml#a3d3b83546b872ad372361b470d463f45">pkgDepCache::iDownloadSize</a></div><div class="ttdeci">unsigned long long iDownloadSize</div><div class="ttdef"><b>Definition:</b> depcache.h:311</div></div>
<div class="ttc" id="classOpProgress_xhtml"><div class="ttname"><a href="classOpProgress.xhtml">OpProgress</a></div><div class="ttdef"><b>Definition:</b> progress.h:33</div></div>
<div class="ttc" id="classpkgDepCache_1_1ActionGroup_xhtml_a23b477d0e2d399f75d585d154c346591"><div class="ttname"><a href="classpkgDepCache_1_1ActionGroup.xhtml#a23b477d0e2d399f75d585d154c346591">pkgDepCache::ActionGroup::release</a></div><div class="ttdeci">void release()</div><div class="ttdoc">Clean up the action group before it is destroyed. </div><div class="ttdef"><b>Definition:</b> depcache.cc:72</div></div>
<div class="ttc" id="classpkgDepCache_1_1ActionGroup_xhtml"><div class="ttname"><a href="classpkgDepCache_1_1ActionGroup.xhtml">pkgDepCache::ActionGroup</a></div><div class="ttdoc">Represents an active action group. </div><div class="ttdef"><b>Definition:</b> depcache.h:165</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_a9889a8e869ac184b4366c8bfb1846225"><div class="ttname"><a href="classpkgDepCache.xhtml#a9889a8e869ac184b4366c8bfb1846225">pkgDepCache::IsDeleteOk</a></div><div class="ttdeci">virtual bool IsDeleteOk(const PkgIterator &amp;Pkg, bool MarkPurge=false, unsigned long Depth=0, bool FromUser=true)</div><div class="ttdef"><b>Definition:</b> depcache.cc:872</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_ac23028ed7e8f73b492717b077b3b52e8"><div class="ttname"><a href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">pkgDepCache::MarkAndSweep</a></div><div class="ttdeci">bool MarkAndSweep(InRootSetFunc &amp;rootFunc)</div><div class="ttdoc">Update the Marked and Garbage fields of all packages. </div><div class="ttdef"><b>Definition:</b> depcache.h:399</div></div>
<div class="ttc" id="structpkgDepCache_1_1StateCache_xhtml"><div class="ttname"><a href="structpkgDepCache_1_1StateCache.xhtml">pkgDepCache::StateCache</a></div><div class="ttdef"><b>Definition:</b> depcache.h:210</div></div>
<div class="ttc" id="classpkgDepCache_1_1InRootSetFunc_xhtml"><div class="ttname"><a href="classpkgDepCache_1_1InRootSetFunc.xhtml">pkgDepCache::InRootSetFunc</a></div><div class="ttdoc">An arbitrary predicate on packages. </div><div class="ttdef"><b>Definition:</b> depcache.h:70</div></div>
<div class="ttc" id="classpkgCache_1_1Namespace_xhtml"><div class="ttname"><a href="classpkgCache_1_1Namespace.xhtml">pkgCache::Namespace</a></div><div class="ttdef"><b>Definition:</b> pkgcache.h:685</div></div>
<div class="ttc" id="classpkgCache_xhtml"><div class="ttname"><a href="classpkgCache.xhtml">pkgCache</a></div><div class="ttdef"><b>Definition:</b> pkgcache.h:88</div></div>
<div class="ttc" id="structpkgDepCache_1_1StateCache_xhtml_a72d73f7024c40960ff644d3270bb482c"><div class="ttname"><a href="structpkgDepCache_1_1StateCache.xhtml#a72d73f7024c40960ff644d3270bb482c">pkgDepCache::StateCache::Marked</a></div><div class="ttdeci">bool Marked</div><div class="ttdoc">true if this package can be reached from the root set. </div><div class="ttdef"><b>Definition:</b> depcache.h:227</div></div>
<div class="ttc" id="classpkgDepCache_xhtml"><div class="ttname"><a href="classpkgDepCache.xhtml">pkgDepCache</a></div><div class="ttdef"><b>Definition:</b> depcache.h:65</div></div>
<div class="ttc" id="classConfiguration_1_1MatchAgainstConfig_xhtml_a6b22196d9933bb73b60e258c2a8263b3"><div class="ttname"><a href="classConfiguration_1_1MatchAgainstConfig.xhtml#a6b22196d9933bb73b60e258c2a8263b3">Configuration::MatchAgainstConfig::Match</a></div><div class="ttdeci">bool Match(char const *str) const </div><div class="ttdoc">Returns true for a string matching one of the patterns. </div><div class="ttdef"><b>Definition:</b> configuration.cc:1011</div></div>
<div class="ttc" id="classpkgCache_1_1VerIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1VerIterator.xhtml">pkgCache::VerIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:190</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_a1ab9378572dc74fc8088fd690d494570"><div class="ttname"><a href="classpkgDepCache.xhtml#a1ab9378572dc74fc8088fd690d494570">pkgDepCache::GetRootSetFunc</a></div><div class="ttdeci">virtual InRootSetFunc * GetRootSetFunc()</div><div class="ttdef"><b>Definition:</b> depcache.cc:1742</div></div>
<div class="ttc" id="classConfiguration_1_1MatchAgainstConfig_xhtml"><div class="ttname"><a href="classConfiguration_1_1MatchAgainstConfig.xhtml">Configuration::MatchAgainstConfig</a></div><div class="ttdoc">match a string against a configurable list of patterns </div><div class="ttdef"><b>Definition:</b> configuration.h:129</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_aab6b1c53f7766ad618b80ebee701b60d"><div class="ttname"><a href="classpkgDepCache.xhtml#aab6b1c53f7766ad618b80ebee701b60d">pkgDepCache::MarkInstall</a></div><div class="ttdeci">bool MarkInstall(PkgIterator const &amp;Pkg, bool AutoInst=true, unsigned long Depth=0, bool FromUser=true, bool ForceImportantDeps=false)</div><div class="ttdef"><b>Definition:</b> depcache.cc:1039</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_af3287419f765a35b0f1f25e449167718"><div class="ttname"><a href="classpkgDepCache.xhtml#af3287419f765a35b0f1f25e449167718">pkgDepCache::MarkFollowsRecommends</a></div><div class="ttdeci">virtual bool MarkFollowsRecommends()</div><div class="ttdef"><b>Definition:</b> depcache.cc:1754</div></div>
<div class="ttc" id="pkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file </div></div>
<div class="ttc" id="classpkgVersioningSystem_xhtml"><div class="ttname"><a href="classpkgVersioningSystem.xhtml">pkgVersioningSystem</a></div><div class="ttdef"><b>Definition:</b> version.h:30</div></div>
<div class="ttc" id="classpkgDepCache_1_1ActionGroup_xhtml_ae23e9160a48c2bc17b7d1abffd745deb"><div class="ttname"><a href="classpkgDepCache_1_1ActionGroup.xhtml#ae23e9160a48c2bc17b7d1abffd745deb">pkgDepCache::ActionGroup::~ActionGroup</a></div><div class="ttdeci">~ActionGroup()</div><div class="ttdoc">Destroy the action group. </div><div class="ttdef"><b>Definition:</b> depcache.cc:90</div></div>
<div class="ttc" id="classpkgCache_1_1PkgFileIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1PkgFileIterator.xhtml">pkgCache::PkgFileIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:357</div></div>
<div class="ttc" id="classpkgDepCache_1_1Policy_xhtml"><div class="ttname"><a href="classpkgDepCache_1_1Policy.xhtml">pkgDepCache::Policy</a></div><div class="ttdef"><b>Definition:</b> depcache.h:273</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_a9890f74f3e35a54ac7d4f3b5ab00aeb2"><div class="ttname"><a href="classpkgDepCache.xhtml#a9890f74f3e35a54ac7d4f3b5ab00aeb2">pkgDepCache::MarkFollowsSuggests</a></div><div class="ttdeci">virtual bool MarkFollowsSuggests()</div><div class="ttdef"><b>Definition:</b> depcache.cc:1759</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_a88a05f968ff34a58f71a896ad15dea4d"><div class="ttname"><a href="classpkgDepCache.xhtml#a88a05f968ff34a58f71a896ad15dea4d">pkgDepCache::MarkAuto</a></div><div class="ttdeci">void MarkAuto(const PkgIterator &amp;Pkg, bool Auto)</div><div class="ttdef"><b>Definition:</b> depcache.cc:1618</div></div>
<div class="ttc" id="classpkgCache_1_1PkgIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1PkgIterator.xhtml">pkgCache::PkgIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:141</div></div>
<div class="ttc" id="structpkgDepCache_1_1StateCache_xhtml_a568795a48143af2663ad3dc310d3074c"><div class="ttname"><a href="structpkgDepCache_1_1StateCache.xhtml#a568795a48143af2663ad3dc310d3074c">pkgDepCache::StateCache::Garbage</a></div><div class="ttdeci">bool Garbage</div><div class="ttdoc">true if this package is unused and should be removed. </div><div class="ttdef"><b>Definition:</b> depcache.h:235</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_ab49a20f20f37cf4879e2ee750220e285"><div class="ttname"><a href="classpkgDepCache.xhtml#ab49a20f20f37cf4879e2ee750220e285">pkgDepCache::iUsrSize</a></div><div class="ttdeci">signed long long iUsrSize</div><div class="ttdef"><b>Definition:</b> depcache.h:309</div></div>
<div class="ttc" id="classpkgDepCache_xhtml_a5fdeb68216c5ff24d05181afa44e9e4b"><div class="ttname"><a href="classpkgDepCache.xhtml#a5fdeb68216c5ff24d05181afa44e9e4b">pkgDepCache::IsInstallOk</a></div><div class="ttdeci">virtual bool IsInstallOk(const PkgIterator &amp;Pkg, bool AutoInst=true, unsigned long Depth=0, bool FromUser=true)</div><div class="ttdef"><b>Definition:</b> depcache.cc:1290</div></div>
<div class="ttc" id="classpkgDepCache_1_1DefaultRootSetFunc_xhtml"><div class="ttname"><a href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml">pkgDepCache::DefaultRootSetFunc</a></div><div class="ttdoc">Returns true for packages matching a regular expression in APT::NeverAutoRemove. </div><div class="ttdef"><b>Definition:</b> depcache.h:201</div></div>
<div class="ttc" id="classpkgDepCache_1_1Policy_xhtml_abec8ff6462cd8e729dcadf1014871d84"><div class="ttname"><a href="classpkgDepCache_1_1Policy.xhtml#abec8ff6462cd8e729dcadf1014871d84">pkgDepCache::Policy::IsImportantDep</a></div><div class="ttdeci">virtual bool IsImportantDep(DepIterator const &amp;Dep)</div><div class="ttdef"><b>Definition:</b> depcache.cc:1714</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
