<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: apt-pkg/contrib/error.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li><li class="navelem"><a class="el" href="dir_c6ef23f15b074dcedf6810e24f2a7676.xhtml">contrib</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">error.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// $Id: error.h,v 1.8 2001/05/07 05:06:52 jgg Exp $</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* ######################################################################</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">   Global Erorr Class - Global error mechanism</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">   This class has a single global instance. When a function needs to </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">   generate an error condition, such as a read error, it calls a member</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">   in this class to add the error to a stack of errors. </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">   By using a stack the problem with a scheme like errno is removed and</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">   it allows a very detailed account of what went wrong to be transmitted</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">   to the UI for display. (Errno has problems because each function sets</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">   errno to 0 if it didn&#39;t have an error thus eraseing erno in the process</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">   of cleanup)</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   Several predefined error generators are provided to handle common </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">   things like errno. The general idea is that all methods return a bool.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">   If the bool is true then things are OK, if it is false then things </span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   should start being undone and the stack should unwind under program</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">   control.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   A Warning should not force the return of false. Things did not fail, but</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   they might have had unexpected problems. Errors are stored in a FIFO</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">   so Pop will return the first item..</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">   I have some thoughts about extending this into a more general UI&lt;-&gt; </span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">   Engine interface, ie allowing the Engine to say &#39;The disk is full&#39; in </span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">   a dialog that says &#39;Panic&#39; and &#39;Retry&#39;.. The error generator functions</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">   like errno, Warning and Error return false always so this is normal:</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">     if (open(..))</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">        return _error-&gt;Errno(..);</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   This source is placed in the Public Domain, do with it what you will</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">   It was originally written by Jason Gunthorpe.</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   ##################################################################### */</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef PKGLIB_ERROR_H</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PKGLIB_ERROR_H</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/macros.h&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &lt;stdarg.h&gt;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml">   52</a></span>&#160;<span class="keyword">class </span><a class="code" href="classGlobalError.xhtml">GlobalError</a>                                                       <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">public</span>:                                                                 <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">   56</a></span>&#160;        <span class="keyword">enum</span> <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> {</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">   59</a></span>&#160;                <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">FATAL</a> = 40,</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">   61</a></span>&#160;                <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">ERROR</a> = 30,</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">   63</a></span>&#160;                <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a> = 20,</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4">   65</a></span>&#160;                <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4">NOTICE</a> = 10,</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f">   67</a></span>&#160;                <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f">DEBUG</a> = 0</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        };</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#aad9dbd341423bd851460b3758639237e">FatalE</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *Function,<span class="keyword">const</span> <span class="keywordtype">char</span> *Description,...) APT_PRINTF(3) APT_COLD;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#af5fae022d83601f40fde149ebafd1cce">Errno</a>(const <span class="keywordtype">char</span> *Function,const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(3) APT_COLD;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#aad6b628986a4a856e289477bde506744">WarningE</a>(const <span class="keywordtype">char</span> *Function,const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(3) APT_COLD;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#ae354ceb52b63c8e30d17caaca6159dd7">NoticeE</a>(const <span class="keywordtype">char</span> *Function,const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(3) APT_COLD;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a93b848d9522749268832bafa64f6a5c2">DebugE</a>(const <span class="keywordtype">char</span> *Function,const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(3) APT_COLD;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a00e3b810d806f9d632844f1fdab275e3">InsertErrno</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;type, const <span class="keywordtype">char</span>* Function,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                         const <span class="keywordtype">char</span>* Description,...) APT_PRINTF(4) APT_COLD;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a00e3b810d806f9d632844f1fdab275e3">InsertErrno</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> type, const <span class="keywordtype">char</span>* Function,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                         const <span class="keywordtype">char</span>* Description, va_list &amp;args,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                         <span class="keywordtype">int</span> const errsv, <span class="keywordtype">size_t</span> &amp;msgSize) APT_COLD;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a7cacbea0f1054d0aef0b5b4505a559e7">Fatal</a>(const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(2) APT_COLD;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a94e3c521c32a44fd786b9f22f153b85d">Error</a>(const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(2) APT_COLD;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#ada014c1d78ce219fc8657bd0d6b33c17">Warning</a>(const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(2) APT_COLD;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a8c06d18a7c1fbf94f3e5622d5c40cd9a">Notice</a>(const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(2) APT_COLD;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#ae297fbea06bddac8ae8dac88e76f5cb0">Debug</a>(const <span class="keywordtype">char</span> *Description,...) APT_PRINTF(2) APT_COLD;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a077d42684d901b09856da43ba4300090">Insert</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;type, const <span class="keywordtype">char</span>* Description,...) APT_PRINTF(3) APT_COLD;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a077d42684d901b09856da43ba4300090">Insert</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> type, const <span class="keywordtype">char</span>* Description,</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                         va_list &amp;args, <span class="keywordtype">size_t</span> &amp;msgSize) APT_COLD;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a17591c060e662603e5d6c2e14c35500a">  228</a></span>&#160;        inline <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a17591c060e662603e5d6c2e14c35500a">PendingError</a>() const APT_PURE {<span class="keywordflow">return</span> PendingFlag;};</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a2506440cb23e7863b6bed4916dafbaec">empty</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> <span class="keyword">const</span> &amp;threshold = <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a>) const APT_PURE;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classGlobalError.xhtml#a74cc65f991d28b468016924af691f8c0">PopMessage</a>(std::<span class="keywordtype">string</span> &amp;Text);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classGlobalError.xhtml#a41190a6896a09de84c7b7aa32a9573ba">Discard</a>();</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">DumpErrors</a>(std::ostream &amp;out, <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;threshold = <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a>,</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                        <span class="keywordtype">bool</span> const &amp;mergeStack = true);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a92db7530702b6110f3727ac3404543bd">  272</a></span>&#160;        <span class="keywordtype">void</span> inline <a class="code" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">DumpErrors</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;threshold) {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <a class="code" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">DumpErrors</a>(std::cerr, threshold);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="comment">// mvo: we do this instead of using a default parameter in the</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="comment">//      previous declaration to avoid a (subtle) API break for</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="comment">//      e.g. sigc++ and mem_fun0</span></div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">  284</a></span>&#160;<span class="comment"></span>        <span class="keywordtype">void</span> <span class="keyword">inline</span> <a class="code" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">DumpErrors</a>() {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <a class="code" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">DumpErrors</a>(<a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a>);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classGlobalError.xhtml#a45bab2f436ea354b8e642d7f16fffb00">PushToStack</a>();</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classGlobalError.xhtml#a545a1a225fd4c4cf0ba9b3778c7ba974">RevertToStack</a>();</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classGlobalError.xhtml#ad673c5ed8a108766a94f4d50d663c57c">MergeWithStack</a>();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="classGlobalError.xhtml#a4524748d3e229651211c74135a59ff0b">  306</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="classGlobalError.xhtml#a4524748d3e229651211c74135a59ff0b">StackCount</a>() const APT_PURE {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                <span class="keywordflow">return</span> Stacks.size();</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <a class="code" href="classGlobalError.xhtml">GlobalError</a>();</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keyword">private</span>:                                                                <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">struct </span>Item {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                std::string Text;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> Type;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                Item(<span class="keywordtype">char</span> <span class="keyword">const</span> *Text, <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> <span class="keyword">const</span> &amp;Type) :</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                        Text(Text), Type(Type) {};</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keyword">friend</span> std::ostream&amp; operator&lt;&lt; (std::ostream &amp;out, Item i) {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        <span class="keywordflow">switch</span>(i.Type) {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">FATAL</a>:</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">ERROR</a>: out &lt;&lt; <span class="stringliteral">&quot;E&quot;</span>; <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a>: out &lt;&lt; <span class="stringliteral">&quot;W&quot;</span>; <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4">NOTICE</a>: out &lt;&lt; <span class="stringliteral">&quot;N&quot;</span>; <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f">DEBUG</a>: out &lt;&lt; <span class="stringliteral">&quot;D&quot;</span>; <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                        }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                        <span class="keywordflow">return</span> out &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; i.Text;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                }</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        };</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        std::list&lt;Item&gt; Messages;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordtype">bool</span> PendingFlag;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keyword">struct </span>MsgStack {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                std::list&lt;Item&gt; <span class="keyword">const</span> Messages;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keywordtype">bool</span> <span class="keyword">const</span> PendingFlag;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                MsgStack(std::list&lt;Item&gt; <span class="keyword">const</span> &amp;Messages, <span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;Pending) :</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                         Messages(Messages), PendingFlag(Pending) {};</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        };</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        std::list&lt;MsgStack&gt; Stacks;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;};</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">// The &#39;extra-ansi&#39; syntax is used to help with collisions. </span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<a class="code" href="classGlobalError.xhtml">GlobalError</a> *_GetErrorObj();</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="preprocessor">#define _error _GetErrorObj()</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classGlobalError_xhtml_a74cc65f991d28b468016924af691f8c0"><div class="ttname"><a href="classGlobalError.xhtml#a74cc65f991d28b468016924af691f8c0">GlobalError::PopMessage</a></div><div class="ttdeci">bool PopMessage(std::string &amp;Text)</div><div class="ttdoc">returns and removes the first (or last) message in the list </div><div class="ttdef"><b>Definition:</b> error.cc:187</div></div>
<div class="ttc" id="classGlobalError_xhtml_a41190a6896a09de84c7b7aa32a9573ba"><div class="ttname"><a href="classGlobalError.xhtml#a41190a6896a09de84c7b7aa32a9573ba">GlobalError::Discard</a></div><div class="ttdeci">void Discard()</div><div class="ttdoc">clears the list of messages </div><div class="ttdef"><b>Definition:</b> error.cc:225</div></div>
<div class="ttc" id="classGlobalError_xhtml_a94e3c521c32a44fd786b9f22f153b85d"><div class="ttname"><a href="classGlobalError.xhtml#a94e3c521c32a44fd786b9f22f153b85d">GlobalError::Error</a></div><div class="ttdeci">bool Error(const char *Description,...) APT_PRINTF(2) APT_COLD</div><div class="ttdoc">add an Error message to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a93b848d9522749268832bafa64f6a5c2"><div class="ttname"><a href="classGlobalError.xhtml#a93b848d9522749268832bafa64f6a5c2">GlobalError::DebugE</a></div><div class="ttdeci">bool DebugE(const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</div><div class="ttdoc">add a debug message with errno to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a00e3b810d806f9d632844f1fdab275e3"><div class="ttname"><a href="classGlobalError.xhtml#a00e3b810d806f9d632844f1fdab275e3">GlobalError::InsertErrno</a></div><div class="ttdeci">bool InsertErrno(MsgType const &amp;type, const char *Function, const char *Description,...) APT_PRINTF(4) APT_COLD</div><div class="ttdoc">adds an errno message with the given type </div></div>
<div class="ttc" id="classGlobalError_xhtml_a81be42602b9ad2301c54674471818908"><div class="ttname"><a href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">GlobalError::DumpErrors</a></div><div class="ttdeci">void DumpErrors()</div><div class="ttdoc">dumps the messages of type WARNING or higher to std::cerr </div><div class="ttdef"><b>Definition:</b> error.h:284</div></div>
<div class="ttc" id="classGlobalError_xhtml_ad673c5ed8a108766a94f4d50d663c57c"><div class="ttname"><a href="classGlobalError.xhtml#ad673c5ed8a108766a94f4d50d663c57c">GlobalError::MergeWithStack</a></div><div class="ttdeci">void MergeWithStack()</div><div class="ttdoc">merge current and stack together </div><div class="ttdef"><b>Definition:</b> error.cc:263</div></div>
<div class="ttc" id="classGlobalError_xhtml_af5fae022d83601f40fde149ebafd1cce"><div class="ttname"><a href="classGlobalError.xhtml#af5fae022d83601f40fde149ebafd1cce">GlobalError::Errno</a></div><div class="ttdeci">bool Errno(const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</div><div class="ttdoc">add an Error message with errno to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4"><div class="ttname"><a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4">GlobalError::NOTICE</a></div><div class="ttdoc">deprecation warnings, old fallback behavior, … </div><div class="ttdef"><b>Definition:</b> error.h:65</div></div>
<div class="ttc" id="classGlobalError_xhtml_a17591c060e662603e5d6c2e14c35500a"><div class="ttname"><a href="classGlobalError.xhtml#a17591c060e662603e5d6c2e14c35500a">GlobalError::PendingError</a></div><div class="ttdeci">bool PendingError() const APT_PURE</div><div class="ttdoc">is an error in the list? </div><div class="ttdef"><b>Definition:</b> error.h:228</div></div>
<div class="ttc" id="classGlobalError_xhtml_ada014c1d78ce219fc8657bd0d6b33c17"><div class="ttname"><a href="classGlobalError.xhtml#ada014c1d78ce219fc8657bd0d6b33c17">GlobalError::Warning</a></div><div class="ttdeci">bool Warning(const char *Description,...) APT_PRINTF(2) APT_COLD</div><div class="ttdoc">add a warning message to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_aad9dbd341423bd851460b3758639237e"><div class="ttname"><a href="classGlobalError.xhtml#aad9dbd341423bd851460b3758639237e">GlobalError::FatalE</a></div><div class="ttdeci">bool FatalE(const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</div><div class="ttdoc">add a fatal error message with errno to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a077d42684d901b09856da43ba4300090"><div class="ttname"><a href="classGlobalError.xhtml#a077d42684d901b09856da43ba4300090">GlobalError::Insert</a></div><div class="ttdeci">bool Insert(MsgType const &amp;type, const char *Description,...) APT_PRINTF(3) APT_COLD</div><div class="ttdoc">adds an error message with the given type </div></div>
<div class="ttc" id="classGlobalError_xhtml_a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f"><div class="ttname"><a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f">GlobalError::DEBUG</a></div><div class="ttdoc">for developers only in areas it is hard to print something directly </div><div class="ttdef"><b>Definition:</b> error.h:67</div></div>
<div class="ttc" id="classGlobalError_xhtml_a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81"><div class="ttname"><a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">GlobalError::WARNING</a></div><div class="ttdoc">indicates problem that can lead to errors later on </div><div class="ttdef"><b>Definition:</b> error.h:63</div></div>
<div class="ttc" id="classGlobalError_xhtml_a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90"><div class="ttname"><a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">GlobalError::ERROR</a></div><div class="ttdoc">An error does hinder the correct execution and should be corrected. </div><div class="ttdef"><b>Definition:</b> error.h:61</div></div>
<div class="ttc" id="classGlobalError_xhtml_ae354ceb52b63c8e30d17caaca6159dd7"><div class="ttname"><a href="classGlobalError.xhtml#ae354ceb52b63c8e30d17caaca6159dd7">GlobalError::NoticeE</a></div><div class="ttdeci">bool NoticeE(const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</div><div class="ttdoc">add a notice message with errno to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a7cacbea0f1054d0aef0b5b4505a559e7"><div class="ttname"><a href="classGlobalError.xhtml#a7cacbea0f1054d0aef0b5b4505a559e7">GlobalError::Fatal</a></div><div class="ttdeci">bool Fatal(const char *Description,...) APT_PRINTF(2) APT_COLD</div><div class="ttdoc">add an fatal error message to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a2ea0bb09adcce7f655e8f8ee8d30561b"><div class="ttname"><a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">GlobalError::MsgType</a></div><div class="ttdeci">MsgType</div><div class="ttdoc">a message can have one of following severity </div><div class="ttdef"><b>Definition:</b> error.h:56</div></div>
<div class="ttc" id="classGlobalError_xhtml_a545a1a225fd4c4cf0ba9b3778c7ba974"><div class="ttname"><a href="classGlobalError.xhtml#a545a1a225fd4c4cf0ba9b3778c7ba974">GlobalError::RevertToStack</a></div><div class="ttdeci">void RevertToStack()</div><div class="ttdoc">throw away all current messages </div><div class="ttdef"><b>Definition:</b> error.cc:254</div></div>
<div class="ttc" id="classGlobalError_xhtml_ae297fbea06bddac8ae8dac88e76f5cb0"><div class="ttname"><a href="classGlobalError.xhtml#ae297fbea06bddac8ae8dac88e76f5cb0">GlobalError::Debug</a></div><div class="ttdeci">bool Debug(const char *Description,...) APT_PRINTF(2) APT_COLD</div><div class="ttdoc">add a debug message to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml_a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0"><div class="ttname"><a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">GlobalError::FATAL</a></div><div class="ttdoc">Message will be printed instantly as it is likely that this error will lead to a complete crash...</div><div class="ttdef"><b>Definition:</b> error.h:59</div></div>
<div class="ttc" id="classGlobalError_xhtml_a2506440cb23e7863b6bed4916dafbaec"><div class="ttname"><a href="classGlobalError.xhtml#a2506440cb23e7863b6bed4916dafbaec">GlobalError::empty</a></div><div class="ttdeci">bool empty(MsgType const &amp;threshold=WARNING) const APT_PURE</div><div class="ttdoc">is the list empty? </div><div class="ttdef"><b>Definition:</b> error.cc:231</div></div>
<div class="ttc" id="classGlobalError_xhtml_a45bab2f436ea354b8e642d7f16fffb00"><div class="ttname"><a href="classGlobalError.xhtml#a45bab2f436ea354b8e642d7f16fffb00">GlobalError::PushToStack</a></div><div class="ttdeci">void PushToStack()</div><div class="ttdoc">put the current Messages into the stack </div><div class="ttdef"><b>Definition:</b> error.cc:247</div></div>
<div class="ttc" id="classGlobalError_xhtml_a8c06d18a7c1fbf94f3e5622d5c40cd9a"><div class="ttname"><a href="classGlobalError.xhtml#a8c06d18a7c1fbf94f3e5622d5c40cd9a">GlobalError::Notice</a></div><div class="ttdeci">bool Notice(const char *Description,...) APT_PRINTF(2) APT_COLD</div><div class="ttdoc">add a notice message to the list </div></div>
<div class="ttc" id="classGlobalError_xhtml"><div class="ttname"><a href="classGlobalError.xhtml">GlobalError</a></div><div class="ttdef"><b>Definition:</b> error.h:52</div></div>
<div class="ttc" id="classGlobalError_xhtml_a4524748d3e229651211c74135a59ff0b"><div class="ttname"><a href="classGlobalError.xhtml#a4524748d3e229651211c74135a59ff0b">GlobalError::StackCount</a></div><div class="ttdeci">size_t StackCount() const APT_PURE</div><div class="ttdoc">return the deep of the stack </div><div class="ttdef"><b>Definition:</b> error.h:306</div></div>
<div class="ttc" id="classGlobalError_xhtml_aad6b628986a4a856e289477bde506744"><div class="ttname"><a href="classGlobalError.xhtml#aad6b628986a4a856e289477bde506744">GlobalError::WarningE</a></div><div class="ttdeci">bool WarningE(const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</div><div class="ttdoc">add a warning message with errno to the list </div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
