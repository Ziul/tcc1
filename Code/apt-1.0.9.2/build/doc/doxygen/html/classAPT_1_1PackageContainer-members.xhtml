<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>APT</b></li><li class="navelem"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">PackageContainer&lt; Container &gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>begin</b>() const  (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>begin</b>() (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>clear</b>() (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Constructor</b> enum name (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>empty</b>() const  (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>end</b>() const  (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>end</b>() (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#aff88043b8fd94b37279562c24739d9e5">erase</a>(iterator position)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>erase</b>(iterator &amp;position, bool) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>erase</b>(const pkgCache::PkgIterator x) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>erase</b>(iterator first, iterator last) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>find</b>(pkgCache::PkgIterator const &amp;P) const  (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FNMATCH</b> enum value (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#a8804a892e26929ba7bcbfcc949d567e5">FromCommandLine</a>(pkgCacheFile &amp;Cache, const char **cmdline, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromCommandLine</b>(pkgCacheFile &amp;Cache, const char **cmdline) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromCommandLine</b>(PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, const char **cmdline, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromFnmatch</b>(pkgCacheFile &amp;Cache, std::string pattern, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromFnmatch</b>(PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, std::string pattern, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromFnMatch</b>(pkgCacheFile &amp;Cache, std::string const &amp;pattern) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromGroup</b>(PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, std::string pattern, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromModifierCommandLine</b>(unsigned short &amp;modID, PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, const char *cmdline, std::list&lt; Modifier &gt; const &amp;mods, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#a1cb88f925ac9d396f33a84553c9b38cf">FromName</a>(pkgCacheFile &amp;Cache, std::string const &amp;pattern, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromName</b>(pkgCacheFile &amp;Cache, std::string const &amp;pattern) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#a6f977417b24a48f1d91ef7e1fe0ce370">FromRegEx</a>(pkgCacheFile &amp;Cache, std::string pattern, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromRegEx</b>(pkgCacheFile &amp;Cache, std::string const &amp;pattern) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromRegEx</b>(PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, std::string pattern, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#a401b518a044bc6539a04f5449b0b45e4">FromString</a>(pkgCacheFile &amp;Cache, std::string const &amp;pattern, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromString</b>(pkgCacheFile &amp;Cache, std::string const &amp;pattern) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromString</b>(PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, std::string const &amp;pattern, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#aaf37c00a6a9f729a1e761125c22d3d84">FromTask</a>(pkgCacheFile &amp;Cache, std::string const &amp;pattern, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromTask</b>(pkgCacheFile &amp;Cache, std::string const &amp;pattern) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromTask</b>(PackageContainerInterface *const pci, pkgCacheFile &amp;Cache, std::string pattern, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>getConstructor</b>() const  (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml#a68c51aa3849e97e4abcc9c61b4457756">GroupedFromCommandLine</a>(pkgCacheFile &amp;Cache, const char **cmdline, std::list&lt; Modifier &gt; const &amp;mods, unsigned short const &amp;fallback, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GroupedFromCommandLine</b>(pkgCacheFile &amp;Cache, const char **cmdline, std::list&lt; Modifier &gt; const &amp;mods, unsigned short const &amp;fallback) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(pkgCache::PkgIterator const &amp;P) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(PackageContainer&lt; Cont &gt; const &amp;pkgcont) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(const_iterator begin, const_iterator end) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(PackageContainer&lt; Cont &gt; const &amp;pkgcont) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(pkgCache::PkgIterator const &amp;P) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(const_iterator begin, const_iterator end) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>PackageContainer</b>() (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>PackageContainer</b>(Constructor const &amp;by) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>REGEX</b> enum value (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>setConstructor</b>(Constructor const &amp;by) (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>size</b>() const  (defined in <a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainer.xhtml">PackageContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>TASK</b> enum value (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>UNKNOWN</b> enum value (defined in <a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1PackageContainerInterface.xhtml">PackageContainerInterface</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
