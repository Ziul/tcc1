<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="classpkgCache.xhtml">pkgCache</a></li><li class="navelem"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">DepIterator</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">pkgCache::DepIterator Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>AllTargets</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Cache</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>CompType</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>DepIterator</b>(pkgCache &amp;Owner, Dependency *Trg, Version *=0) (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>DepIterator</b>(pkgCache &amp;Owner, Dependency *Trg, Package *) (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>DepIterator</b>() (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>DepType</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>end</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GlobOr</b>(DepIterator &amp;Start, DepIterator &amp;End) (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Index</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsCritical</b>() const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IsGood</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsIgnorable</b>(PrvIterator const &amp;Prv) const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IsIgnorable</b>(PkgIterator const &amp;Pkg) const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsMultiArchImplicit</b>() const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IsNegative</b>() const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsSatisfied</b>(VerIterator const &amp;Ver) const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IsSatisfied</b>(PrvIterator const &amp;Prv) const APT_PURE (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Iterator</b>() (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Iterator</b>(pkgCache &amp;Owner, Dependency *T=0) (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator Dependency *</b>() (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator Dependencyconst *</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator!=</b>(const DepIterator &amp;B) const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator*</b>() (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator*</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator++</b>(int) (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator++</b>() (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator-&gt;</b>() (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator-&gt;</b>() const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b> (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator=</b>(const DepIterator &amp;B) (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator==</b>(const DepIterator &amp;B) const (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Owner</b> (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml#ad8c9e49a8ee257a69302070d16c77e96">OwnerPointer</a>() const </td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ParentPkg</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>ParentVer</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ReMap</b>(void const *const oldMap, void const *const newMap) (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Reverse</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>S</b> (defined in <a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1Iterator.xhtml">pkgCache::Iterator&lt; Dependency, DepIterator &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>SmartTargetPkg</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>SmartTargetPkg</b>(PkgIterator &amp;Result) const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>TargetPkg</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>TargetVer</b>() const  (defined in <a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a>)</td><td class="entry"><a class="el" href="classpkgCache_1_1DepIterator.xhtml">pkgCache::DepIterator</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
