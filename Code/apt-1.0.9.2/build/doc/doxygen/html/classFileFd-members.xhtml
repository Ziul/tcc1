<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FileFd Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classFileFd.xhtml">FileFd</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Atomic</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Auto</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>AutoClose</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Bzip2</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Close</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Compressed</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>CompressMode</b> enum name (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Create</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>DelOnFail</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Empty</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Eof</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>EraseOnFailure</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Exclusive</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Extension</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Fail</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Failed</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Fd</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Fd</b>(int fd) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FileFd</b>(std::string FileName, unsigned int const Mode, unsigned long AccessMode=0666) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FileFd</b>(std::string FileName, unsigned int const Mode, CompressMode Compress, unsigned long AccessMode=0666) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FileFd</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FileFd</b>(int const Fd, unsigned int const Mode=ReadWrite, CompressMode Compress=None) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FileFd</b>(int const Fd, bool const AutoClose) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FileName</b> (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FileSize</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Flags</b> (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>gzFd</b>() APT_DEPRECATED APT_PURE (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Gzip</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>HitEof</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>iFd</b> (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsCompressed</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IsOpen</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>LocalFlags</b> enum name (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Lzma</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ModificationTime</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Name</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>None</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Open</b>(std::string FileName, unsigned int const Mode, CompressMode Compress, unsigned long const AccessMode=0666) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Open</b>(std::string FileName, unsigned int const Mode, APT::Configuration::Compressor const &amp;compressor, unsigned long const AccessMode=0666) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Open</b>(std::string const &amp;FileName, unsigned int const Mode, unsigned long const AccessMode=0666) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>OpenDescriptor</b>(int Fd, unsigned int const Mode, CompressMode Compress, bool AutoClose=false) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>OpenDescriptor</b>(int Fd, unsigned int const Mode, APT::Configuration::Compressor const &amp;compressor, bool AutoClose=false) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>OpenDescriptor</b>(int Fd, unsigned int const Mode, bool AutoClose=false) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>OpenMode</b> enum name (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>OpFail</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Read</b>(void *To, unsigned long long Size, bool AllowEof) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Read</b>(void *To, unsigned long long Size, unsigned long long *Actual=0) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Read</b>(void *To, unsigned long long Size, unsigned long *Actual) APT_DEPRECATED (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ReadLine</b>(char *To, unsigned long long const Size) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>ReadOnly</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ReadOnlyGzip</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>ReadWrite</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Replace</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Seek</b>(unsigned long long To) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Size</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Skip</b>(unsigned long long To) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Sync</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Tell</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>TemporaryFileName</b> (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Truncate</b>(unsigned long long To) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Write</b>(const void *From, unsigned long long Size) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Write</b>(int Fd, const void *From, unsigned long long Size) (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>WriteAny</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>WriteAtomic</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>WriteEmpty</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>WriteExists</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>WriteOnly</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>WriteTemp</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Xz</b> enum value (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>~FileFd</b>() (defined in <a class="el" href="classFileFd.xhtml">FileFd</a>)</td><td class="entry"><a class="el" href="classFileFd.xhtml">FileFd</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
