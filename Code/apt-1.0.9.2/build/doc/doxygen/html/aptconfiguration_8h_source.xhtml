<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>apt: apt-pkg/aptconfiguration.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.0.9.2</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">aptconfiguration.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span>                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#ifndef APT_CONFIGURATION_H</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define APT_CONFIGURATION_H</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span><span class="comment">// Include Files                                                        /*{{{*/</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;limits&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span>APT {</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classAPT_1_1Configuration.xhtml">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="classAPT_1_1Configuration.xhtml">Configuration</a> {                                                   <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:                                                                 <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        std::vector&lt;std::string&gt; <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#ac7fa3aafc2583adf52f72f0ae17889db">getCompressionTypes</a>(<span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;Cached = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        std::vector&lt;std::string&gt; <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#acc33f2047d937d29e30aab9d5996dbae">getLanguages</a>(<span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;All = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                        <span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;Cached = <span class="keyword">true</span>, <span class="keywordtype">char</span> <span class="keyword">const</span> ** <span class="keyword">const</span> Locale = 0);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classAPT_1_1Configuration.xhtml#a466633c0f7cb6c08060c10d0497b96ea">checkLanguage</a>(std::string Lang, <span class="keywordtype">bool</span> <span class="keyword">const</span> All = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        std::vector&lt;std::string&gt; <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#a21db1e0ec61c9efdb73722de53bfb522">getArchitectures</a>(<span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;Cached = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordtype">bool</span> <span class="keyword">static</span> <a class="code" href="classAPT_1_1Configuration.xhtml#ab2304c8a19e116879658c6421a6055af">checkArchitecture</a>(std::string <span class="keyword">const</span> &amp;Arch);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structAPT_1_1Configuration_1_1Compressor.xhtml">   95</a></span>&#160;        <span class="keyword">struct </span><a class="code" href="structAPT_1_1Configuration_1_1Compressor.xhtml">Compressor</a> {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                std::string Name;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                std::string Extension;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                std::string Binary;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                std::vector&lt;std::string&gt; CompressArgs;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                std::vector&lt;std::string&gt; UncompressArgs;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> Cost;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <a class="code" href="structAPT_1_1Configuration_1_1Compressor.xhtml">Compressor</a>(<span class="keywordtype">char</span> <span class="keyword">const</span> *name, <span class="keywordtype">char</span> <span class="keyword">const</span> *extension, <span class="keywordtype">char</span> <span class="keyword">const</span> *binary,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                           <span class="keywordtype">char</span> <span class="keyword">const</span> *compressArg, <span class="keywordtype">char</span> <span class="keyword">const</span> *uncompressArg,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                           <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <span class="keyword">const</span> cost);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <a class="code" href="structAPT_1_1Configuration_1_1Compressor.xhtml">Compressor</a>() : Cost(std::numeric_limits&lt;unsigned short&gt;::max()) {};</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        };</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        std::vector&lt;Compressor&gt; <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#a31677eaae0e2b91beb0ac16cfb5ae197">getCompressors</a>(<span class="keywordtype">bool</span> <span class="keyword">const</span> Cached = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        std::vector&lt;std::string&gt; <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#a337c44f02d8216458b78645ca0a9103f">getCompressorExtensions</a>();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        std::vector&lt;std::string&gt; <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#a67e7225b95c373ca6ae179a19bdc6ad2">getBuildProfiles</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        std::string <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classAPT_1_1Configuration.xhtml#ac80b81f2197ce4f59d06515a701a1034">getBuildProfilesString</a>();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keyword">private</span>:                                                        <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordtype">void</span> <span class="keyword">static</span> setDefaultConfigurationForCompressors();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;};</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="structAPT_1_1Configuration_1_1Compressor_xhtml"><div class="ttname"><a href="structAPT_1_1Configuration_1_1Compressor.xhtml">APT::Configuration::Compressor</a></div><div class="ttdoc">Representation of supported compressors. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.h:95</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_ac80b81f2197ce4f59d06515a701a1034"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#ac80b81f2197ce4f59d06515a701a1034">APT::Configuration::getBuildProfilesString</a></div><div class="ttdeci">static std::string const getBuildProfilesString()</div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:537</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_a31677eaae0e2b91beb0ac16cfb5ae197"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#a31677eaae0e2b91beb0ac16cfb5ae197">APT::Configuration::getCompressors</a></div><div class="ttdeci">static std::vector&lt; Compressor &gt; const getCompressors(bool const Cached=true)</div><div class="ttdoc">Return a vector of Compressors supported for data.tar&#39;s. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:439</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_ac7fa3aafc2583adf52f72f0ae17889db"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#ac7fa3aafc2583adf52f72f0ae17889db">APT::Configuration::getCompressionTypes</a></div><div class="ttdeci">static std::vector&lt; std::string &gt; const getCompressionTypes(bool const &amp;Cached=true)</div><div class="ttdoc">Returns a vector of usable Compression Types. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:39</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_a337c44f02d8216458b78645ca0a9103f"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#a337c44f02d8216458b78645ca0a9103f">APT::Configuration::getCompressorExtensions</a></div><div class="ttdeci">static std::vector&lt; std::string &gt; const getCompressorExtensions()</div><div class="ttdoc">Return a vector of extensions supported for data.tar&#39;s. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:490</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml">APT::Configuration</a></div><div class="ttdoc">Provide access methods to various configuration settings. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.h:19</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_a67e7225b95c373ca6ae179a19bdc6ad2"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#a67e7225b95c373ca6ae179a19bdc6ad2">APT::Configuration::getBuildProfiles</a></div><div class="ttdeci">static std::vector&lt; std::string &gt; const getBuildProfiles()</div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:525</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_a466633c0f7cb6c08060c10d0497b96ea"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#a466633c0f7cb6c08060c10d0497b96ea">APT::Configuration::checkLanguage</a></div><div class="ttdeci">static bool checkLanguage(std::string Lang, bool const All=false)</div><div class="ttdoc">Are we interested in the given Language? </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:278</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_acc33f2047d937d29e30aab9d5996dbae"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#acc33f2047d937d29e30aab9d5996dbae">APT::Configuration::getLanguages</a></div><div class="ttdeci">static std::vector&lt; std::string &gt; const getLanguages(bool const &amp;All=false, bool const &amp;Cached=true, char const **const Locale=0)</div><div class="ttdoc">Returns a vector of Language Codes. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:118</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_a21db1e0ec61c9efdb73722de53bfb522"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#a21db1e0ec61c9efdb73722de53bfb522">APT::Configuration::getArchitectures</a></div><div class="ttdeci">static std::vector&lt; std::string &gt; const getArchitectures(bool const &amp;Cached=true)</div><div class="ttdoc">Returns a vector of Architectures we support. </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:289</div></div>
<div class="ttc" id="classAPT_1_1Configuration_xhtml_ab2304c8a19e116879658c6421a6055af"><div class="ttname"><a href="classAPT_1_1Configuration.xhtml#ab2304c8a19e116879658c6421a6055af">APT::Configuration::checkArchitecture</a></div><div class="ttdeci">static bool checkArchitecture(std::string const &amp;Arch)</div><div class="ttdoc">Are we interested in the given Architecture? </div><div class="ttdef"><b>Definition:</b> aptconfiguration.cc:398</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
